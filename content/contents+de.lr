_model: home
---
_template: home.html
---
title: Die Python-IDEs
---
summary:
---
description: BeWare ist eine Ansammlung von Projekten die das Entwickeln, Testen und Verbreiten von Python Programmen erleichtern. Jedes Teil folgen der Unix Philosophie und ist gut in einem Bereich. Alle Projekte können unabhängig oder in Kombination miteinander genutzt werden.---
---
header:

#### button-block ####
label: Erzähl mir mehr
----
link: /project/overview/
----
icon:
----
type: primary
----
size: lg
----
is_block: no
#### button-block ####
label: Ich möchte mithelfen
----
link: /contributing/
----
icon:
----
type: primary
----
size: lg
----
is_block:
#### button-block ####
label: Ich möchte spenden
----
link: /contributing/membership/
----
icon:
----
type: primary
----
size: lg
----
is_block:
---
body:

#### text-block ####
title: ### Python native Werkzeuge...
----
text: Python hat sich als eine sehr fähige Sprache bewährt - zugänglich für Neulinge, aber mächtig in den Händen von Experten. Warum sollten man nicht überall Python verwenden können, um einen Computer zu sagen was er zu tun hat? Und sollten deine Werkzeuge nicht alle Fähigkeiten von Python als Sprache ausnutzen, nicht nur die Teile, die gut zu C-Bindungs passen?
----
image: python.png
----
image_alignment: right
#### text-block ####
title: ### ...auf Handy & Desktop...
----
text: Modern computing doesn't happen in an 80x25 console window. It happens on **phones, tablets, and desktop machines** with rich user interfaces. Shouldn't you be able to use Python in all those locations, and **exploit the unique capabilities of those platforms**?
----
image: cross-platform.png
----
image_alignment: left
#### text-block ####
title: ### ...die sich nativ verhalten.
----
text: Endnutzer sollten sich nicht darum sorgen in welcher Sprache ihre Programme geschrieben wurden. Das fängt damit and dass die Programme wie native Programme aussehen und sich auch so verhalten. Natives Aussehen, natives Verhalten, Auslieferung durch die selben Kanäle wie eine native App. Warum sollten deine Python-Werkzeuge nicht genauso gut funktionieren wie ein natives Werkzeug?----
image: native.png
----
image_alignment: right
#### text-block ####
title: ## Das ist BeeWare.
----
text: Das ist, was BeeWare bietet. Tools, die Ihnen helfen, Python-Code mit einer reichen und nativen Benutzeroberfläche zu schreiben und die nötigen Bibliotheken, um diesen Code auf iOS, Android, MacOS, Linux, Windows, TV und vieles weiteren Plattformen zum laufen zu bringen.----
----
image: brutus-97.png
----
image_alignment: left
#### text-block ####
title: ### Open source
----
text: Der Open Source-Entwicklungsprozess hat sich als der zuverlässigste Weg herausgestellt, um robuste und zuverlässige Software zu entwickeln. Deshalb ist die gesamte BeeWare Suite unter BSD lizenziert und es steht jedem offen sie zu verwenden und zu modifizieren.----
image: opensource.png
----
image_alignment: right
#### text-block ####
title: ### Alle Beiträge sind willkommen
----
text: Aber es geht nicht nur um Code. Ein erfolgreiches Softwareprojekt erfordert Dokumentation, Designfähigkeiten, Feedback und Fehlerberichte. Die BeeWare-Community erkennt an, dass ** alle Beiträge wichtig sind ** - nicht nur diejenigen, die als Pull-Request auf GitHub kommen.----
----
image: labhr.png
----
image_alignment: left
#### text-block ####
title: ### Von der Vielfalt kommt Stärke
----
text: Eine vielfältige Gemeinschaft ist eine starke Gemeinschaft. Das bedeutet, Menschen aller Fähigkeits Level, aller Hintergründen, unabhängig von ihrer Herkunft, ihres Glaubens oder Orientierung zu akzeptieren. Das BeeWare-Projekt verpflichtet sich zur **Entwicklung und Pflege einer vielfältigen und einladenden Gemeinschaft**. Wir haben ein **Mentoren-Programm für jeden** der sich als Mitwirkender engagieren möchte, untermauert durch unsere `Verhaltensregeln <community/behavior/code-of-conduct/>`__, die rigoros durchgesetzt werden.
----
image: diversity.png
----
image_alignment: right
#### text-block ####
title: Hilf mit!
----
text: Wenn das alles interessant klingt, wirf doch einen Blick auf die `BeeWare-Projekte </project/projects>`__ und schau wie du diese zum entwickeln von Python apps nutzen kannst. Möchtest du lieber etwas beitragen aber hast noch nie an einem Open Source Projekt gearbeitet? Dann start mit unserer `Anleitung für Ersthelfer </contributing/first-time/>`__. Wenn du gleich voll los legen möchtest schau dir die `Projekte </project/projects/>`__ an oder lies dir unsere Leitfaden `Wie kann ich helfen </contributing/how/>`__ durch.
----
image:
----
image_alignment:
#### button-block ####
label:

Beitrag zu BeeWare
----
link: /contributing/
----
icon: code-fork
----
type: primary
----
size: lg
----
is_block: yes
#### text-block ####
title: ### Bleib in Kontakt!
----
text: Folge `@PyBeeWare <https://twitter.com/PyBeeWare/>`__ auf Twitter oder `melde dich bei der the BeeWare-Enthusiasten-Mailingliste an </community/keep-informed/>`__ um Updates, Hinweise, Tipps und Ankündigungen im Zusammenhang mit dem Projekt zu bekommen.
----
image:
----
image_alignment:
#### button-block ####
label: In Kontakt bleiben!
----
link: /community/keep-informed/
----
icon: envelope
----
type: success
----
size: lg
----
is_block: yes
#### text-block ####
title: ### Mitglieder
----
text: BeeWare wird von Nutzern wie dir unterstützt! Jedes bisschen hilft: "Klick hier, um etwas beizutragen </ contributing / membership />` __.
----
image:
----
image_alignment:
----
gutter_top: ### Vielen Dank an
---
gutter_bottom: ### [... und viele mehr](/project/projects/)
