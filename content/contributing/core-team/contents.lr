_model: page
---
title: Core Team, and Responsibilities
---
sort_key: 4
---
summary: What is the core team, and what do they do?
---
body:

Those busy bees on the `Core Team </community/team>`_ have a number of responsibilities to keep the hive that is BeeWare moving.

These include, but isn't limited to, responding to issues, reviewing and merging code, and architecture of the BeeWare project as a whole. 


Not all Core Team members have the same level of access. At the moment, access is granted on a case by case basis. But generally, access levels can be described by the following: 

Bee-nevolent Dictator for Now (BDFN): `Russell Keith-Magee <https://twitter.com/freakboy3742>`_
 - A take on `Benevolent Dictator for Life <https://en.wikipedia.org/wiki/Benevolent_dictator_for_life>`_, a BDFN has full access to all the things; code, GitHub Organisation, Domain, Social Media, and more. The use of "For Now" as opposed to "For Life" is reference to the Django theme of not subjecting the responsibilities of core maintainer for a person's entire natural life. Life exists outside open source, and code/life balance and general well-being is a very important thing to keep in mind. 

Core Apiarist:
 - A core member with access to more than one project. With this level of access, they have the ability to commit code across projects, and have an understanding of how the different projects fit together, and can comment and made decisions on the entire architecture of the system. They may also have some level of access to systems outside of GitHub.

Apiarist:
 - A core member with access to one project.


Guidelines (not actual rules)
------------------------------------

As with any project with more than one person with commit rights, there are a number of general guidelines that the team should follow: 


 * **Be a good representation of the project to the wider community**

 * **Treat every enquiry and contribution to any BeeWare project with respect.**

 * No Apiarist should commit their own code
     - Exception: "Something is very broken and needs to be fixed now"
     - Exception: BDFN

 * All code submitted for review by a core team member should be reviewed by another team member
     - Exception: BFDN 

 * All code should pass Continuous Integration tests before being merged
    - Exception: code that is known to be broken and needs to be committed for other reasons
    - Exception: code in a repo with insufficient CI tests



Becoming an Apiarist
----------------------------

Introduction of a new Apiarist into the team is at the sole discretion of the existing Core Team. While there are no solid rules to this, in general, someone will be invited to be an Apiarist on a BeeWare project if they have demonstrated solid contributions to the project. This can also be extended to someone with specific domain knowledge (for example, iOS/macOS) which might be lacking in the existing team. 


---
gutter:

"Commit bit"?
--------------------------------

In Unix systems, a single bit in a file is used to denote permission to execute a file. In source control systems, a similar bit exists to denote the ability to merge code. To say someone has the "commit bit" means they have write-access to a code base. In GitHub terms, this means they have the ability to merge Pull Requests and commit code directly to the project. 
