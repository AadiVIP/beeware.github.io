_model: page
---
title: Que devrais-je faire ?
---
body:

Le meilleur endroit pour commencer n'importe quelle contribution à l'open source
est celui qui correspond à vos connaissances, votre expérience, et vos centres
d'intérêts.

Avant de commencer
-----------------

Avant de commencer à contribuer, cela peut aider d'avoir un ressenti du projet
dans son ensemble. Si vous n'avez pas encore complété le `tutoriel BeeWare
<https://docs.beeware.org>`__, commencez par là. Cela vous donnera un aperçu des
outils BeeWare les plus importants, vous pourrez ainsi voir comment ils s'imbriquent.

Une fois le tutoriel complété, vous serez prêt à choisir un aspect sur lequel
travailler. Si vous vous heurtez à un problème *en suivant* le tutoriel – si vous
rencontrez un bogue, ou si le language utilisé n'est pas clair – *c'est un bon
endroit pour commencer*! Si vous pouvez faire de votre expérience une amélioration
du tutoriel, la prochaine personne qui suivra le tutoriel n'aura pas le même problème.

En revanche, si votre expérience du tutoriel était satisfaisante, (et nous espérons
qu'elle l'était !), voici quelques idées d'où vous engager, selon vos compétences
et vis intérêts.

Programmation Python
-------------------

Briefcase
~~~~~~~~~

Si vous aimeriez contribuer à un outil dont l'énoncé de problème est clairement
défini, mais nécessite la correction de bogues et l'ajout de fonctionnalités, `Briefcase
<https://github.com/beeware/briefcase>`__ peut être le projet pour vous. Briefcase
est un outil pour empaqueter un projet Python en une application autonome avec interface
utilisateur graphique. Il prend le fichier de configuration ``pyproject.toml``, et s'en sert
pour générer des installeurs ou des ensembles d'applications distribuables.

Le `suivi des problèmes <https://github.com/beeware/briefcase/issues>`__ de Briefcase
contient une collection de suggestions de fonctionnalités (ainsi qu'un plus petit nombre de
bogues). Si c'est votre première contribution, cherchez un ticket marqué `bon premier problème (“good
first issue”)
<https://github.com/beeware/briefcase/issues?q=is%3Aopen+is%3Aissue+label%3A%22good%20first%20issue%22>`__
– ce sont des problèmes choisis spécialement pour ceux qui contribuent pour la
première fois car elles devraient êtres relativement directes à implémenter. Vous
pourriez aussi trouver pratique de filtrer les tickets pour la plateforme que vous
utilisez pour développer – il sera difficile de résoudre un problèmes lié à Linux
si vous n'avez pas de machine Linux pour les tests !

Choisissez un ticket, laissez un commentaire disant que vous jetez un œil au problème,
et essayez de développer une "pull request" implémentant une solution !

Colosseum
~~~~~~~~~

Si l'idée d'un problème très bien spécifié mais complexe vous intéresse, `Colosseum
<https://github.com/beeware/colosseum>`__ est un bon endroit pour contribuer.
Colosseum est une implémentation en pur Python de l'algorithme de mise en page CSS,
conçue comme un navigateur. BeeWare l'utilise pour disposer les widgets à l'écran
d'une application. La spécification CSS dispose d'une suite de tests étendue ;
Colosseum doit réussir tous ces tests.

La documentation de Colosseum a un `guide de contribution
<https://colosseum.readthedocs.io/en/latest/how-to/contribute.html>`__ pour
vous mener à travers votre première contribution à Colosseum.

Programmation avec interface graphique
----------------

Si vous avez de l'expérience avec une bibliothèque de widgets natifs — Cocoa sur
macOS, GTK+ sur Linux, Windows Forms, ou les bibliothèques natives iOS ou Android,
vous pourriez aider avec `Toga <https://github.com/beeware/toga>`__. Toga est une
boîte à outils de widgets multiplateforme – elle offre interface commune pour des
éléments d'interface utilisateur comme des boutons et des arbres.

Toga dispose déjà d'une gamme d'interfaces définies ; cependant, l'implémentation
de ces interfaces n'est pas complète sur toutes les plateformes. Choisissez un élément
graphique et implémentez-le pour la plateforme de votre choix !

Même si vous ne connaissez *pas* de bibliothèque de widgets native, vous pouvez tout
de même aider avec Toga. Coder de nouveaux widgets est bien moins compliqué qu'il n'y
paraît. Chaque plateforme a de la documentation sur l'utilisation de leurs APIs, et le
processus de traduction de la documentation de la plateforme depuis un autre language
(e.g., Objective C ou C#) est relativement direct. Le code existant devrait vous
donner des indications sur la manière dont cela peut être fait, et l'équipe BeeWare
sera ravie de vous aider si vous en avez besoin. Rejoignez le `Discord BeeWare
</bee/chat/>`__ et nous ferons tout ce que nous pourrons pour vous aider !

Si vous n'êtes pas prêt à transformer du code d'un language à un autre, il reste
toujours la suite de tests. La bibliothèque principale de Toga dispose également
d'une suite de tests, mais sa couverture n'est pas très bonne. Choisissez une interface
graphique, et voyez si vous pouvez écrire un test pour celle-ci !

Documentation
--------------

Une bonne documentation est essentielle pour tout projet réussi. Nous savons que
`Toga <https://github.com/beeware/toga>`__ et `Briefcase
<https://github.com/beeware/briefcase>`__ nécessitenttous deux des améliorations
significatives à leur documentation. Vous avez complété le tutoriel ; maintenant
regardez la documentation pour `Toga <https://toga.readthedocs.io>`__ et `Briefcase
<https://briefcase.readthedocs.io>`__ et voyez si vous pouvez trouver un moyen
d'améliorer les tutoriels, les références et les guides sur les sujets qui y sont.

Tutoriels
----------

One of the best ways to contribute is to make sure our introductory and tutorial
documentation is rock solid. Pick a project of interest from the BeeWare suite,
and try to follow the getting started guide and tutorial. If you can't *find*
the getting started guide - then that's the first thing to report!

As you work through the tutorial, take note of anything that doesn't make sense,
or doesn't work. Then open a bug report for those problems.

Windows
--------

If you're a Windows user, BeeWare can *definitely* use your help. The core team
all use Linux and macOS in their daily development, and as a result, it's really
easy for Windows incompatibilities to slip in. This is almost always due to an
oversight. Identifying - and maybe even fixing - problems with running BeeWare
tools on Windows is an immense help.

Languages
----------

Do you speak a language other than English? At present, the core team are all
native speakers of English. Providing translations of documentation, or
completely new tutorials or guides in your native language is a great way to
contribute. Pick a project that already has documentation and translate that
text. Alternatively, start from scratch and write a completely new tutorial.

If you speak a language with a non-latin character set (e.g., Russian or
Chinese), or a language with a right-to-left script (e.g., Hebrew or Arabic)
you'll be able to point out all the places where we've assumed simple ASCII
encoding or left-to-right conventions. Pick any of the active BeeWare projects,
and try to use it with using your native language. If you hit any problems,
report those problems as bugs; if you are feeling particularly adventurous, see
if you can work out how to *fix* the bug, too.

Utilisation pratique
----------------

One of the best ways for us to determine where our gaps are - in both
documentation and APIs - is for people to actually use BeeWare to build
something. So, if none of the ideas so far sound interesting, why not try
something of your own? Use the BeeWare suite to build that app you've always
wanted - a desktop visualization of a data source, or a mobile application
to track your activities - whatever it is, try to build it.

We can almost guarantee that you'll hit problems. BeeWare is a still a very
young project. But the problems you hit will give us a great indication of
what needs to be tackled. It will indicate what widgets we need, and what
documentation needs to be improved. So, as you hit problems building your own
app, log issues with the BeeWare projects that caused problems. This will
enable us to identify what we need to improve - and, it might even be a source
of inspiration for you to contribute!

---
sort_key: 2
---
summary: So you want to help - but where should you start?
---
gutter:

Première contribution
------------------------

Want to start small? Once you've poked about a bit in the tutorials, check out
the BeeWare issues marked `[good first issue]
<https://github.com/search?q=user%3Abeeware+label%3A%22good%20first%20issue%22+is%3Aissue+is%3Aopen&type=issues>`__
